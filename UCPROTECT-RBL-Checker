#!/bin/bash
# Made with ✨ Magic ©️ Nur Mukhammad Agus (https://github.com/madfxr), 2025. Free and Open Source Software (FOSS)
# RBL List
BLISTS=(
  dnsbl-0.uceprotect.net
  dnsbl-1.uceprotect.net
  dnsbl-2.uceprotect.net
  dnsbl-3.uceprotect.net
)

ERROR() {
  echo "$0 ERROR: $1" >&2
  exit 2
}

clear
echo -e "
█    ██  ▄████▄   ██▓███   ██▀███   ▒█████  ▄▄▄█████▓▓█████  ▄████▄  ▄▄▄█████▓
 ██  ▓██▒▒██▀ ▀█  ▓██░  ██▒▓██ ▒ ██▒▒██▒  ██▒▓  ██▒ ▓▒▓█   ▀ ▒██▀ ▀█  ▓  ██▒ ▓▒
▓██  ▒██░▒▓█    ▄ ▓██░ ██▓▒▓██ ░▄█ ▒▒██░  ██▒▒ ▓██░ ▒░▒███   ▒▓█    ▄ ▒ ▓██░ ▒░
▓▓█  ░██░▒▓▓▄ ▄██▒▒██▄█▓▒ ▒▒██▀▀█▄  ▒██   ██░░ ▓██▓ ░ ▒▓█  ▄ ▒▓▓▄ ▄██▒░ ▓██▓ ░
▒▒█████▓ ▒ ▓███▀ ░▒██▒ ░  ░░██▓ ▒██▒░ ████▓▒░  ▒██▒ ░ ░▒████▒▒ ▓███▀ ░  ▒██▒ ░
░▒▓▒ ▒ ▒ ░ ░▒ ▒  ░▒▓▒░ ░  ░░ ▒▓ ░▒▓░░ ▒░▒░▒░   ▒ ░░   ░░ ▒░ ░░ ░▒ ▒  ░  ▒ ░░
░░▒░ ░ ░   ░  ▒   ░▒ ░       ░▒ ░ ▒░  ░ ▒ ▒░     ░     ░ ░  ░  ░  ▒       ░
 ░░░ ░ ░ ░        ░░         ░░   ░ ░ ░ ░ ▒    ░         ░   ░          ░
   ░     ░ ░                  ░         ░ ░              ░  ░░ ░
         ░                                                   ░
                 - UCPROTECT Realtime Blackhole List Checker -
"

read -p "Enter the IP Address or Subnet in CIDR (e.g.: 1.2.3.4 or 1.2.3.0,1.2.3.1 or 1.2.3.0/24): " INPUT_LIST
[ -z "$INPUT_LIST" ] && ERROR "No input."

STARTED_AT=$(date +"%a %b %e %H:%M:%S %z %Y")
echo -e "\nChecking for: $INPUT_LIST\nStarted at: $STARTED_AT\n"

SAFE_NAME="${INPUT_LIST//[\/,]/-}"
OUTPUT_TXT="RBL-Output-${SAFE_NAME}.txt"
OUTPUT_JSON="RBL-Output-${SAFE_NAME}.json"

total_checked=0
declare -A HIGHEST_MSG HIGHEST_LVL LISTED_UNIQ

IFS=',' read -ra ADDRS <<< "$INPUT_LIST"
for entry in "${ADDRS[@]}"; do
  if [[ "$entry" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    ips="$entry"
  else
    ips=$(prips "$entry" 2>/dev/null) || { echo "Invalid: $entry"; continue; }
  fi

  for ip in $ips; do
    total_checked=$((total_checked+1))
    rev=$(awk -F. '{print $4"."$3"."$2"."$1}' <<< "$ip")
    ptr=$(host "$ip" 2>/dev/null | awk '/pointer/ {print $5}' | sed 's/\.$//')
    [ -z "$ptr" ] && ptr="No PTR Found"

    echo "IP Address: $ip | PTR: $ptr"
    for BL in "${BLISTS[@]}"; do
      raw=$(host -t txt "$rev.$BL" 2>/dev/null | grep "descriptive text" | cut -d\" -f2)
      if [[ -n "$raw" ]]; then
        echo "  $BL: $raw"
        LISTED_UNIQ["$ip"]=1
        lvl=$(grep -oE 'Level[[:space:]]*[0-9]' <<< "$raw" | grep -oE '[0-9]' || echo 0)
        if (( lvl > HIGHEST_LVL["$ip"] )); then
          HIGHEST_LVL["$ip"]=$lvl
          HIGHEST_MSG["$ip"]=$raw
        fi
      else
        echo "  $BL: Not Listed"
      fi
    done
    echo ""
  done
done

total_listed=${#LISTED_UNIQ[@]}
FINISHED_AT=$(date +"%a %b %e %H:%M:%S %z %Y")

# Merge Message Results
RESULT_COMBINED=""
for ip in "${!HIGHEST_MSG[@]}"; do
  RESULT_COMBINED+="${RESULT_COMBINED:+, }${HIGHEST_MSG["$ip"]}"
done
[ -z "$RESULT_COMBINED" ] && RESULT_COMBINED="Not Listed"

LISTED_CSV=$(IFS=,; echo "${!LISTED_UNIQ[*]}")
[ -z "$LISTED_CSV" ] && LISTED_CSV="Not Listed"

# TXT Output Saved
{
  echo "Results: $RESULT_COMBINED"
  echo "Input: $INPUT_LIST"
  echo "Total Checked: $total_checked"
  echo "Total Listed: $total_listed"
  echo "Listed IP Addresses: $LISTED_CSV"
  echo "Started at: $STARTED_AT"
  echo "Finished at: $FINISHED_AT"
} > "$OUTPUT_TXT"

# JSON Output Saved
cat <<EOF > "$OUTPUT_JSON"
{
  "results": "$RESULT_COMBINED",
  "input": "$INPUT_LIST",
  "total_checked": "$total_checked",
  "total_listed": "$total_listed",
  "listed_ips": "$LISTED_CSV",
  "started_at": "$STARTED_AT",
  "finished_at": "$FINISHED_AT"
}
EOF

# Summary Saved
echo -e "Output Summary:"
echo -e "  ➜ Total IP Addresses Checked: $total_checked"
echo -e "  ➜ Total IP Addresses Listed: $total_listed"
echo -e "  ➜ Listed IP Addresses: $LISTED_CSV"
echo -e "  ➜ Finished at: $FINISHED_AT\n"
echo "Output Saved:"
echo "  ➜ Text: $OUTPUT_TXT"
echo "  ➜ JSON: $OUTPUT_JSON"
